function onOpen() {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('AutoFill Docs');
  menu.addItem('Create New Docs', 'createNewGoogleDocs')
  menu.addToUi();
}

function createNewGoogleDocs() {
  //This value should be the id of your document template that we created in the last step
  const googleDocTemplate = DriveApp.getFileById('1SeeDM2U5fxYKHA69WICPsafnfyhXxjmCv4FO51-cdFA');
  
  //This value should be the id of the folder where you want your completed documents stored
  const destinationFolder = DriveApp.getFolderById('1kjuqWJBD3Raj1VPVmgJaJxNIz_Kq_9vs')
  //Here we store the sheet as a variable
  const sheet = SpreadsheetApp
    .getActiveSpreadsheet()
    .getSheetByName('Form Responses 1')
  
  //Now we get all of the values as a 2D array
  const rows = sheet.getDataRange().getValues();
  
  //Start processing each spreadsheet row
  rows.forEach(function(row, index){
    //Here we check if this row is the headers, if so we skip it
    if (index === 0) return;
    //Here we check if a document has already been generated by looking at 'Document Link', if so we skip it
    if (row[18]) return;
    //Using the row data in a template literal, we make a copy of our template document in our destinationFolder
    const copy = googleDocTemplate.makeCopy(`${row[15]}, ${row[16]} MANPOWER REQUISITION FORM` , destinationFolder)
    //Once we have the copy, we then open it using the DocumentApp
    const doc = DocumentApp.openById(copy.getId())
    //All of the content lives in the body, so we get that for editing
    const body = doc.getBody();
    //In this line we do some friendly date formatting, that may or may not work for you locale
    //const friendlyDate = new Date(row[3]).toLocaleDateString();
    
    //In these lines, we replace our replacement tokens with values from our spreadsheet row
    body.replaceText('{Timestamp}', row[0]);
    body.replaceText('{Email Address}', row[1]);
    body.replaceText('{No. of staff requested:}', row[2]);
    body.replaceText('{Required Date:}', row[3]);
    body.replaceText('{Position:}', row[4]);
    body.replaceText('{Grade:}', row[5]);
    body.replaceText('{Department:}', row[6]);
    body.replaceText('{Division:}', row[7]);
    body.replaceText('{Report to:}', row[8]);
    body.replaceText('{Is this position:}', row[9]);
    body.replaceText('{Is this position:}', row[10]);
    body.replaceText('{Salary Range:}', row[11]);
    body.replaceText('{Qualification:}', row[12]);
    body.replaceText('{Working experience:}', row[13]);
    body.replaceText('{Practical skill:}', row[14]);
    body.replaceText('{Name:}', row[15]);
    body.replaceText('{Date:}', row[16]);
    body.replaceText('{_uid}', row[19]);
    body.replaceText('{_status}', row[20]);
    var _approver_1 = JSON.parse(row[22])
    body.replaceText('{_approver_1."name"}', _approver_1.name);
    body.replaceText('{_approver_1."title"}', _approver_1.title);
    body.replaceText('{_approver_1."status"}', _approver_1.status);

    if(_approver_1.comments === null){
      body.replaceText('{_approver_1."comments"}', ""); 
    }else{
      body.replaceText('{_approver_1."comments"}', _approver_1.comments); 
    }

    //body.replaceText('{_approver_1."comments"}', _approver_1.comments);
    body.replaceText('{_approver_1."timestamp"}', _approver_1.timestamp);
    var _approver_2 = JSON.parse(row[23])
    body.replaceText('{_approver_2."name"}', _approver_2.name);
    body.replaceText('{_approver_2."title"}', _approver_2.title);
    body.replaceText('{_approver_2."status"}', _approver_2.status);

    if(_approver_2.comments === null){
      body.replaceText('{_approver_2."comments"}', ""); 
    }else{
      body.replaceText('{_approver_2."comments"}', _approver_2.comments); 
    }

    //body.replaceText('{_approver_2."comments"}', _approver_2.comments);
    body.replaceText('{_approver_2."timestamp"}',_approver_2.timestamp);
    //body.replaceText('{{Hire Date}}', friendlyDate);
    //body.replaceText('{{Hourly Wage}}', row[4]);
    
    //We make our changes permanent by saving and closing the document
    doc.saveAndClose();
    //Store the url of our new document in a variable
    const url = doc.getUrl();
    //Write that value back to the 'Document Link' column in the spreadsheet. 
    sheet.getRange(index + 1, 19).setValue(url)
    
  })
  
}
